import streamlit as st
import openai
import boto3
import uuid
from PIL import Image
from io import BytesIO
from urllib.parse import urlencode
from streamtoolkit_omkar.auth.streamlit_guard import token_input_box, get_user_from_token_ui
from streamtoolkit_omkar.config.env import AWS_REGION, OPENAI_API_KEY, S3_BUCKET

# === Cognito SSO Config ===
COGNITO_DOMAIN = "https://us-east-15hrvvjiye.auth.us-east-1.amazoncognito.com"
CLIENT_ID = "7ci8ll2p8lb9etbra58cpunl76"
REDIRECT_URI = "https://gpt4o-image-wrapper-oasb.streamlit.app/"
SCOPES = ["openid", "email", "profile"]

openai.api_key = OPENAI_API_KEY
s3 = boto3.client("s3", region_name=AWS_REGION)

# === Generate Hosted UI Login Link ===
login_url = f"{COGNITO_DOMAIN}/login?" + urlencode({
    "response_type": "token",
    "client_id": CLIENT_ID,
    "redirect_uri": REDIRECT_URI,
    "scope": " ".join(SCOPES)
})

st.set_page_config(page_title="GPT-4o S3 Wrapper", layout="centered")
st.title("üß† GPT-4o Image Wrapper + Upload + S3")

# === Show login button ===
st.markdown(f"[üîê Login with Google]({login_url})")

# === Get token from URL or input ===
query_params = st.experimental_get_query_params()
if "id_token" in query_params:
    token = query_params["id_token"][0]
    st.session_state["token"] = token

token = st.session_state.get("token") or token_input_box()
user = get_user_from_token_ui(token)

# === Prompt + Upload + Generate Logic ===
if user:
    st.success(f"‚úÖ Logged in as: {user.get('email', user.get('username', 'unknown'))}")

    uploaded_file = st.file_uploader("üì§ Upload an image (optional)", type=["png", "jpg", "jpeg"])
    prompt = st.text_area("Or enter a text prompt")

    if uploaded_file:
        st.image(uploaded_file, caption="Uploaded Image", use_container_width=True)

    if st.button("Generate / Upload") and (prompt or uploaded_file):
        with st.spinner("Processing..."):
            if uploaded_file:
                file_id = f"user_uploads/{user['username']}/{uuid.uuid4()}.png"
                url = upload_file_to_s3(uploaded_file, file_id)
                st.success(f"Uploaded to S3: {url}")

            if prompt:
                def sanitize_prompt(prompt):
                    return f"A cute {prompt.strip()}. Rendered as a cartoon in soft tone."

                response = openai.Image.create(
                    prompt=sanitize_prompt(prompt),
                    n=1,
                    size="1024x1024"
                )
                img_url = response["data"][0]["url"]
                st.image(img_url, caption="Generated by GPT-4o", use_container_width=True)
