import streamlit as st
import openai
import boto3
import uuid
from PIL import Image
from io import BytesIO

from streamtoolkit_omkar.auth.streamlit_guard import token_input_box, get_user_from_token_ui
from streamtoolkit_omkar.config.env import OPENAI_API_KEY, AWS_REGION, S3_BUCKET

openai.api_key = OPENAI_API_KEY
s3 = boto3.client("s3", region_name=AWS_REGION)

def sanitize_prompt(prompt):
    return f"A cute {prompt.strip()}. Rendered as a cartoon in soft tone."

def upload_file_to_s3(file_obj, filename):
    s3.upload_fileobj(file_obj, S3_BUCKET, filename)
    return f"https://{S3_BUCKET}.s3.{AWS_REGION}.amazonaws.com/{filename}"

def generate_image(prompt):
    response = openai.Image.create(
        prompt=sanitize_prompt(prompt),
        n=1,
        size="1024x1024"
    )
    return response["data"][0]["url"]

st.set_page_config(page_title="GPT-4o S3 Wrapper", layout="centered")
st.title("ðŸ§  GPT-4o Image Wrapper + Upload + S3")

token = token_input_box()
user = get_user_from_token_ui(token)

if user:
    uploaded_file = st.file_uploader("ðŸ“¤ Upload an image (optional)", type=["png", "jpg", "jpeg"])
    prompt = st.text_area("Or enter a text prompt")

    if st.button("Generate / Upload") and (prompt or uploaded_file):
        with st.spinner("Processing..."):
            if uploaded_file:
                file_id = f"user_uploads/{user['username']}/{uuid.uuid4()}.png"
                url = upload_file_to_s3(uploaded_file, file_id)
                st.success(f"Uploaded to S3: {url}")
            if prompt:
                img_url = generate_image(prompt)
                st.image(img_url, caption="Generated by GPT-4o", use_container_width=True)
